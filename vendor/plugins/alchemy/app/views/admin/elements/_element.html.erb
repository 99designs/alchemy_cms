<%- has_rtf_atoms = element.contents.detect { |atom| atom.essence_type == 'EssenceRichtext' } -%>

<div class="element_editor<%= element.folded ? ' folded' : '' %>" id="element_<%= element.id %>">
	<%= render :partial => "element_head", :locals => {:element => element} %>
	<%- if !element.folded? -%>
		<% form_remote_tag(
			:url => admin_element_path(element),
			:method => :put,
			:before => (has_rtf_atoms ? "saveRtfContents(#{element.id})" : nil),
			:loading => %(
				$('element_#{element.id}_save').hide();
				$('element_#{element.id}_spinner').show();
			),
			:complete => %(
				$('element_#{element.id}_save').show();
				$('element_#{element.id}_spinner').hide();
			),
			:html => {
				:id => "element_#{element.id}_form"
			}
		) do %>
			<div id="element_<%= element.id %>_content" class="element_content">
				<%= render_editor(element) %>
			</div>
			<%= render :partial => 'element_foot', :locals => {:element => element} %>
		<% end %>
	<%- end -%>
</div>

<script type="text/javascript" charset="utf-8">
// <![CDATA[
	$('element_<%= element.id %>').observe('alchemy:select_element', function (e) {
		var el_ed = e.element();
		var id = e.memo.element_id;
		var editors = $$('#element_area .element_editor');
		var current_selected = editors.detect(function (editor) {
			return editor.hasClassName('selected');
		});
		editors.each(function (ed) {
			ed.removeClassName('selected');
		});
		el_ed.addClassName('selected');
		if (el_ed.hasClassName('folded')) {
			new Ajax.Request(
				'/admin/elements/fold?id='+id,
				{
					request: 'post',
					onComplete: function () {
						$('element_<%= element.id %>').addClassName('selected');
						scrollToElement(id);
					}
				}
			);
		} else if (current_selected != el_ed) {
			scrollToElement(id);
		}
		e.stop();
	});
	$('element_<%= element.id %>').observe('click', function (e) {
		var target = e.currentTarget;
		var id = target.id.replace(/\D/g,'');
		var editors = $$('#element_area .element_editor');
		var current_selected = editors.detect(function (editor) {
			return editor.hasClassName('selected');
		});
		editors.each(function (ed) {
			ed.removeClassName('selected');
		});
		target.addClassName('selected');
		scrollToElement(id);
		var iframe = preview_window.getContent();
		var frame_win = iframe.contentWindow;
		var frame_els = frame_win.$$('.alchemy_element');
		var selected_el = frame_els.detect(function (frame_el) {
			var el_id = frame_el.id.replace(/\D/g,'');
			return el_id == id;
		});
		frame_els.each(function (frame_el) {
			frame_el.setStyle({outline: 'none'});
		})
		selected_el.setStyle({outline: '2px solid #bba589'});
	});
// ]]>
</script>
