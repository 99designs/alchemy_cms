case @content.essence_type
when "EssencePicture"
  page.insert_html(
    :before,
    "add_content_#{@element.id}",
    :partial => "essences/essence_picture_editor",
    :locals => {
      :content => @content,
      :options => @options
    }
  )
  if @dragable
    Configuration.sortable_atoms(page, @element)
  end
  page << "reloadPreview()"
when "EssenceText"
  page.insert_html(
    :before,
    "add_content_for_element_#{@element.id}",
    :partial => "essences/essence_text_editor",
    :locals => {
      :content => @content,
      :options => {:as => 'text_field'}.merge(@options.nil? ? {} : @options)
    }
  )
  page << "reloadPreview(); if(typeof(alchemy_window)!='undefined') { alchemy_window.close(); }"
when "EssenceRichtext"
  page.insert_html(
    :before,
    "add_content_for_element_#{@element.id}",
    :partial => "essences/essence_richtext_editor",
    :locals => {
      :content => @content,
      :options => (@options.nil? ? {} : @options)
    }
  )
  page.call 'TinymceHammer.init'
  page << "alchemy_window.close()"
else
  page.insert_html(
    :before,
    "add_content_for_element_#{@element.id}",
    :partial => "essences/#{@content.essence_type.underscore}_editor",
    :locals => {
      :content => @content,
      :options => (@options.nil? ? {} : @options)
    }
  )
  page << "alchemy_window.close()"
end
AlchemyNotice.show_via_ajax(page, _("Successfully added %{atom}") % {:atom => @content.name})
