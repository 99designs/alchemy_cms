<%- content_for(:subnav_additions) do -%>
<%- unless @locked_pages.blank? -%>
<label><%= t('Active Pages', :scope => :alchemy) %> &raquo;</label>
<%- @locked_pages.each do |page| -%>
<div class="subnavi_tab wide" id="locked_page_<%= page.id %>">
	<%= link_to alchemy.edit_admin_page_path(page) do %>
	<span class="page_name" title="<%= page.name %>">
		<%= truncate page.name, :length => 15 %>
	</span>
	<% end %>
	<%= form_for(alchemy.unlock_admin_page_path(page), :remote => true) do %>
		<button class="icon_button small" title="<%= t('explain_unlocking', :scope => :alchemy) %>">
			<%= render_icon('close small') %>
		</button>
	<% end %>
</div>
<%- end -%>
<%- end -%>
<%- end -%>

<%- content_for :toolbar do -%>
<div id="toolbar_buttons">
	<div class="button_with_label">
		<%= select_tag(
			'language', 
			options_for_select(@languages.map { |l| [l.name, l.id] }, session[:language_id]),
			:onchange => %(
				Alchemy.pleaseWaitOverlay();
				jQuery.get('/admin/pages/switch_language', {
					language_id: this.value,
					layoutpages: true
				});
			)
		) %>
		<label><%= t("Language tree", :scope => :alchemy) %></label>
	</div>
	<%= toolbar_button(
		:icon => 'add_page',
		:url => alchemy.new_admin_page_path(:parent_id => @layout_root.id, :layoutpage => true),
		:overlay_options => {
			:title => t('Add global page', :scope => :alchemy),
			:size => '405x150',
			:overflow => true
		},
		:title => t('Add global page', :scope => :alchemy),
		:label => t('Add global page', :scope => :alchemy),
		:if_permitted_to => [:new, :alchemy_admin_pages]
	) %>
	<%= toolbar_button(
		:icon => "clipboard#{clipboard_empty?('pages') ? '' : ' full'}",
		:url => alchemy.admin_clipboard_path(:remarkable_type => 'pages'),
		:overlay_options => {
			:title => t('Clipboard', :scope => :alchemy),
			:size => '380x270'
		},
		:title => t('Show clipboard', :scope => :alchemy),
		:id => "clipboard_button",
		:label => t('Show clipboard', :scope => :alchemy)
	) %>
</div>
<%- end -%>

<ul class="list" id="layoutpages">
	<%= render :partial => "layoutpage", :collection => @layout_root.children %>
</ul>
