<%= form_for(
    @essence_picture,
    :url => admin_essence_picture_path(@essence_picture, :options => @options),
		:remote => true
) do |f| %>
  <table>
    <tr>
      <td class="label"><%= f.label "caption" %></td>
      <td class="input">
        <%- if @options[:caption_as_textarea] -%>
        <%= f.text_area "caption", :class => 'thin_border' %>
        <%- else -%>
        <%= f.text_field "caption", :class => 'thin_border long' %>
        <%- end -%>
      </td>
    </tr>
    <tr>
      <td class="label"><%= f.label "title" %></td>
      <td><%= f.text_field "title", :class => 'thin_border long' %></td>
    </tr>
    <tr>
      <td class="label"><%= f.label "alt_tag" %></td>
      <td><%= f.text_field "alt_tag", :class => 'thin_border long' %></td>
    </tr>
    <%# Have to use a Hash here, because Rails has a Hash.to_params bug with nested Arrays!!!! %>
    <%- if @options[:sizes].is_a?(HashWithIndifferentAccess) -%>
    <tr>
      <td class="label"><%= f.label "render_size" %></td>
      <td>
      <%= f.select(
        "render_size",
        options_for_select(
          [[t('Layout default', :scope => :alchemy), @options[:image_size]]] + @options[:sizes].sort,
          @essence_picture.render_size
        )
      ) %>
      </td>
    </tr>
    <%- elsif @options[:sizes] && !@options[:sizes].is_a?(HashWithIndifferentAccess) -%>
    <tr>
      <td colspan="2">
        <%= warning("Did not passed a Hash as sizes option", "Sizes Selector Error. Please provide a Hash.") %>
      </td>
    </tr>
    <%- end -%>
    <%- if @options[:image_float_selector] -%>
    <tr>
      <td class="label"><%= f.label "css_class" %></td>
      <td class="input">
        <%= f.select "css_class", [[t("Layout default", :scope => :alchemy), ""], [t("above", :scope => :alchemy), "no_float"], [t("left", :scope => :alchemy), "left"], [t("right", :scope => :alchemy), "right"]] %>
      </td>
    </tr>
    <%# Have to use a Hash here, because Rails has a Hash.to_params bug with nested Arrays!!!! %>
    <%- elsif @options[:css_classes].is_a?(HashWithIndifferentAccess) -%>
    <tr>
      <td class="label"><%= f.label "css_class" %></td>
      <td class="input">
        <%= f.select("css_class", options_for_select([[t('None', :scope => :alchemy), '']] + @options[:css_classes].sort, @essence_picture.css_class)) %>
      </td>
    </tr>
    <%- elsif @options[:css_classes] && !@options[:css_classes].is_a?(HashWithIndifferentAccess) -%>
    <tr>
      <td colspan="2">
        <%= warning("Did not passed a Hash as css_classes option", "CSS Class Selector Error. Please provide a Hash.") %>
      </td>
    </tr>
    <%- end -%>
    <tr>
      <td colspan="2" style="text-align:right">
        <%= hidden_field_tag 'content_id', @content.id %>
        <%= f.button t("save", :scope => :alchemy), :class => 'button' %>
      </td>
    </tr>
  </table>
<% end %>
